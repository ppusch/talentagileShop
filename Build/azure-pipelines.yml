# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'
  system.debug: 'true'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.ArtifactStagingDirectory)\Web"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  displayName: Copy dacpac files to artifact staging directory
  inputs:
    SourceFolder: '$(build.SourcesDirectory)'
    Contents: '**/*.dacpac'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/SQL'
    flattenFolders: true
    OverWrite: true

- task: CopyFiles@2
  displayName: Copy dacpac files to artifact staging directory
  inputs:
    SourceFolder: '$(build.SourcesDirectory)'
    Contents: '**/TalentAgileShop.Database.publish.xml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/SQL'
    flattenFolders: true
    OverWrite: true

- task: VSTest@2
  displayName: 'Run unit tests'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
        **\talentagileshop.cart.tests.dll
        !**\*TestAdapter.dll
        !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
  continueOnError: true

- task: PowerShell@2
  displayName: Generate Coverage Reports
  inputs:
    targetType: 'inline'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    script: |
            &dotnet tool install dotnet-reportgenerator-globaltool --tool-path . --version 4.0.12
            &dotnet tool install coverlet.console --tool-path . --version 1.4.1

            $coverlet = "$pwd\coverlet.exe"
            $reportgenerator = "$pwd\reportgenerator.exe"

            mkdir .\reports

            $unitTestFile = gci -Recurse | ?{ $_.FullName -like "*bin\*talentagileshop.cart.tests.dll" }
            Write-Host "`$unitTestFile value: $unitTestFile"

            &$coverlet $unitTestFile.FullName --target "dotnet" --targetargs "vstest $($unitTestFile.FullName) --logger:trx" --format "cobertura"

            &$reportgenerator -reports:coverage.cobertura.xml -targetdir:reports -reporttypes:"HtmlInline_AzurePipelines;Cobertura;Sonarqube"

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)\reports\Cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)\reports'
    pathToSources: '$(System.DefaultWorkingDirectory)'
    failIfCoverageEmpty: false
    
- publish: $(Build.ArtifactStagingDirectory)/Web
  artifact: Website
  
- publish: $(Build.ArtifactStagingDirectory)/SQL
  artifact: SQL